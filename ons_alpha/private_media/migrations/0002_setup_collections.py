# Generated by Django 4.2.14 on 2024-09-10 16:15

from django.db import migrations


def migrate_forwards(apps, schema_editor):
    Collection = apps.get_model(
        "wagtailcore", "Collection"
    )
    GroupCollectionPermission = apps.get_model(
        "wagtailcore", "GroupCollectionPermission"
    )
    CollectionViewRestriction = apps.get_model(
        "wagtailcore", "CollectionViewRestriction"
    )
    CustomDocument = apps.get_model(
        "documents", "CustomDocument"
    )
    CustomImage = apps.get_model(
        "images", "CustomImage"
    )
    ProtectedCollection = apps.get_model(
        "private_media", "ProtectedCollection"
    )
    if list(Collection.objects.values_list("name", flat=True)) == ["Root"]:
        private = Collection.objects.create(path="00010001", name="Private", depth=2, numchild=0)
        ProtectedCollection.objects.create(collection=private)
        CollectionViewRestriction.objects.create(collection=private, restriction_type="login")
        public = Collection.objects.create(path="00010002", name="Public", depth=2, numchild=0)
        ProtectedCollection.objects.create(collection=public)
        Collection.objects.filter(depth=1).update(numchild=2)
        CustomDocument.objects.all().update(collection=public)
        CustomImage.objects.all().update(collection=public)
        GroupCollectionPermission.objects.all().update(collection=public)


def migrate_backwards(apps, schema_editor):
    Collection = apps.get_model(
        "wagtailcore", "Collection"
    )
    GroupCollectionPermission = apps.get_model(
        "wagtailcore", "GroupCollectionPermission"
    )
    CustomDocument = apps.get_model(
        "documents", "CustomDocument"
    )
    CustomImage = apps.get_model(
        "images", "CustomImage"
    )
    ProtectedCollection = apps.get_model(
        "private_media", "ProtectedCollection"
    )
    if list(Collection.objects.values_list("name", flat=True)) == ["Root", "Private", "Public"]:
        root_collection = Collection.objects.first()
        CustomDocument.objects.all().update(collection=root_collection)
        CustomImage.objects.all().update(collection=root_collection)
        ProtectedCollection.objects.all().delete()
        Collection.objects.filter(name__in=["Private", "Public"]).delete()
        Collection.objects.filter(depth=1).update(numchild=0)
        GroupCollectionPermission.objects.all().update(collection=root_collection)



class Migration(migrations.Migration):

    dependencies = [
        ("private_media", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(migrate_forwards, migrate_backwards),
    ]

# Generated by Django 4.2.16 on 2024-09-30 08:19

from django.db import migrations, models
import django.db.models.deletion
import uuid
import wagtail.fields
import wagtail.models
import wagtail.models.specific


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("wagtailcore", "0094_alter_page_locale"),
    ]

    operations = [
        migrations.CreateModel(
            name="Chart",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ("live", models.BooleanField(default=True, editable=False)),
                ("has_unpublished_changes", models.BooleanField(default=False, editable=False)),
                ("first_published_at", models.DateTimeField(blank=True, db_index=True, null=True)),
                ("last_published_at", models.DateTimeField(editable=False, null=True)),
                ("go_live_at", models.DateTimeField(blank=True, null=True)),
                ("expire_at", models.DateTimeField(blank=True, null=True)),
                ("expired", models.BooleanField(default=False, editable=False)),
                ("uuid", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="charts",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "latest_revision",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailcore.revision",
                    ),
                ),
                (
                    "live_revision",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailcore.revision",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(wagtail.models.PreviewableMixin, wagtail.models.specific.SpecificMixin, models.Model),
        ),
        migrations.CreateModel(
            name="BarChart",
            fields=[
                (
                    "chart_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="charts.chart",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("subtitle", models.CharField(blank=True, max_length=255)),
                ("show_legend", models.BooleanField(default=False)),
                ("legend_position", models.CharField(default="top", max_length=6)),
                ("x_label", models.CharField(max_length=255)),
                ("x_max", models.FloatField(blank=True, null=True)),
                ("x_min", models.FloatField(blank=True, null=True)),
                ("y_label", models.CharField(max_length=255)),
                ("y_max", models.FloatField(blank=True, null=True)),
                ("y_min", models.FloatField(blank=True, null=True)),
                ("data_file", models.FileField(blank=True, max_length=500)),
                (
                    "data",
                    wagtail.fields.StreamField(
                        [("table", 3)],
                        blank=True,
                        block_lookup={
                            0: ("wagtail.blocks.CharBlock", (), {"label": "Text", "max_length": 200}),
                            1: ("wagtail.blocks.IntegerBlock", (), {"label": "Whole number"}),
                            2: ("wagtail.blocks.FloatBlock", (), {"label": "Floating point number"}),
                            3: (
                                "wagtail.contrib.typed_table_block.blocks.TypedTableBlock",
                                [[("text", 0), ("number", 1), ("float", 2)]],
                                {},
                            ),
                        },
                        null=True,
                    ),
                ),
                ("subtype", models.CharField(default="bar", max_length=20)),
            ],
            options={
                "verbose_name": "column or bar chart",
                "verbose_name_plural": "column or bar charts",
            },
            bases=("charts.chart",),
        ),
        migrations.CreateModel(
            name="LineChart",
            fields=[
                (
                    "chart_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="charts.chart",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("subtitle", models.CharField(blank=True, max_length=255)),
                ("show_legend", models.BooleanField(default=False)),
                ("legend_position", models.CharField(default="top", max_length=6)),
                ("x_label", models.CharField(max_length=255)),
                ("x_max", models.FloatField(blank=True, null=True)),
                ("x_min", models.FloatField(blank=True, null=True)),
                ("y_label", models.CharField(max_length=255)),
                ("y_max", models.FloatField(blank=True, null=True)),
                ("y_min", models.FloatField(blank=True, null=True)),
                ("data_file", models.FileField(blank=True, max_length=500)),
                (
                    "data",
                    wagtail.fields.StreamField(
                        [("table", 3)],
                        blank=True,
                        block_lookup={
                            0: ("wagtail.blocks.CharBlock", (), {"label": "Text", "max_length": 200}),
                            1: ("wagtail.blocks.IntegerBlock", (), {"label": "Whole number"}),
                            2: ("wagtail.blocks.FloatBlock", (), {"label": "Floating point number"}),
                            3: (
                                "wagtail.contrib.typed_table_block.blocks.TypedTableBlock",
                                [[("text", 0), ("number", 1), ("float", 2)]],
                                {},
                            ),
                        },
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "line chart",
                "verbose_name_plural": "line charts",
            },
            bases=("charts.chart",),
        ),
    ]

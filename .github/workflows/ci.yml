name: CI

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  lint_py:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: 1.7.1
      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install
      - name: ruff check
        run: ruff check --output-format=github .
      - name: ruff format
        run: ruff format --check .
      - name: djhtml
        run: find ons_alpha/ -name '*.html' | xargs djhtml --check

  test_python:
    runs-on: ubuntu-latest

    env:
      DJANGO_SETTINGS_MODULE: ons_alpha.settings.test
      DATABASE_URL: postgres://postgres:postgres@localhost/postgres # pragma: allowlist secret
      ENABLE_DJANGO_DEFENDER: 'false'
      POSTGRES_HOST_AUTH_METHOD: trust
      SECRET_KEY: fake_secret_key_to_run_tests # pragma: allowlist secret

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres # pragma: allowlist secret
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: 1.7.1
      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install
          coverage erase
      - name: Fetch Design System templates
        run: make load-design-system-templates
      - name: collectstatic
        run: ./manage.py collectstatic --verbosity 0 --noinput --clear
      - name: System checks
        run: ./manage.py check
      - name: Check for missing migrations
        run: ./manage.py makemigrations --check --noinput
      - name: Create cache table
        run: ./manage.py createcachetable
      - name: Test
        run: coverage run ./manage.py test --parallel
      - name: Report coverage
        run: coverage combine && coverage report

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: 1.7.1
      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install
      - name: Build documentation
        run: mkdocs build

[tool.poetry]
name = "ons_alpha"
version = "0.1.0"
description = "ONS Alpha Wagtail site"
authors = ["Torchbox <hello@torchbox.com>"]

[tool.poetry.dependencies]
python = "~3.12"
dj-database-url = "~0.5"
django = "~4.2"
django-basic-auth-ip-whitelist = "~0.5"
django-birdbath = "^1.0.0"
django-crispy-forms = "^2.1"
django-csp = "~3.6"
django-defender = "0.9.5"
django-extensions = "~3.2"
django-redis = "~5.2"
django-storages = { version = "~1.12", extras = ["boto3"] }
djhtml = "~3.0.6"
gunicorn = "~20.1"
psycopg2 = "~2.9"
sentry-sdk = "~1.5"
tbxforms = "2.0.0"
wagtail = "~5.2"
wagtail-accessibility = "~0.2"
wagtail-factories = "^4.1.0"
wagtail-storages = "~1.0.0"
whitenoise = "~6.2"
boto3 = "^1.34.55"
django-jinja = "^2.11.0"

[tool.poetry.group.dev.dependencies]
Werkzeug = "^2.0.3"
coverage = "^7.4.3"
detect-secrets = "~1.4.0"
django-debug-toolbar = "^3.7.0"
dslr = "^0.4.0"
honcho = "^1.0.1"
mkdocs = "1.3.0"
mkdocs-material = "8.2.8"
pre-commit = "~2.11"
pudb = "^2020.1"
pymdown-extensions = "9.3"
tblib = "^3.0.0"
ruff = "^0.4.10"
pylint = "^3.2.4"
black = "^24.4.2"

[build-system]
requires = ["poetry>=1,<2"]
build-backend = "poetry.masonry.api"

[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
extend-select = [
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "DJ",   # flake8-django
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "INT",  # flake8-gettext
    "PIE",  # flake8-pie
    "PGH",  # pygrep-hooks
    "S",    # flake8-bandit
    "SIM",  # flake8-simplify
    "W",    # pycodestyle warnings
    "YTT",  # flake8-2020
    "UP",   # pyupgrade
    "RUF100",  # unused noqa
]

extend-ignore = [
    "E501",  # no line length errors
]
fixable = ["C4", "E", "F", "I", "UP"]

[tool.ruff.lint.per-file-ignores]
"fabfile.py" = ["S603", "S607", "T201", "S101", "S608"]
"ons_alpha/settings/*.py" = ["SIM105", "S105"]
"ons_alpha/utils/management/commands/__init__.py" = ["PGH003"]
"ons_alpha/*/tests/**" = ["S101"]

[tool.ruff.lint.isort]
known-first-party = ["ons_alpha"]
lines-between-types = 1
lines-after-imports = 2

[tool.coverage.run]
source = "."
omit = [
   "manage.py",
   "*venv/*",
   "*node_modules*",
   "*migrations*",
]

[tool.coverage.report]
show_missing = true
